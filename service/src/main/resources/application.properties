server.port=9020

# 设置长连接时间  没起作用
# server.connection-timeout=500


#feign.hystrix.enabled=true

# 配置连接属性
#feign.client.config.feign-producer.connect-timeout=2000
#feign.client.config.feign-producer.read-timeout=3000

feign.httpclient.enabled=true
feign.httpclient.connection-timeout=3000
feign.httpclient.connection-timer-repeat=3000
feign.httpclient.max-connections=500
feign.httpclient.max-connections-per-route=200


# eureka 配置信息
eureka.client.service-url.defaultZone=http://127.0.0.1:8099/eureka/
spring.application.name=feign-consumer



#hystrix.metrics.polling-interval-ms=10000
# 一个rolling window内最小的请求数。如果设为20，那么当一个rolling window的时间内（比如说1个rolling window是10秒）收到19个请求，即使19个请求都失败，也不会触发circuit break。默认20
#hystrix.command.default.circuitBreaker.requestVolumeThreshold=3000

# 触发短路的时间值，当该值设为5000时，则当触发circuit break后的5000毫秒内都会拒绝request，也就是5000毫秒后才会关闭circuit。默认5000
# 只有超过上面配置的阈值时，才会生效
###hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=60000
# 命令执行超时时间，默认1000ms  有效
###hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=2000

#hystrix.command.default.fallback.enabled=true
# 设置统计的时间窗口值的，毫秒值，circuit break 的打开会根据1个rolling window的统计来计算。若rolling window被设为10000毫秒，则rolling window会被分成n个buckets，每个bucket包含success，failure，timeout，rejection的次数的统计信息。默认10000
###hystrix.command.default.metrics.rollingStats.timeInMilliseconds =5000
# 设置一个rolling window被划分的数量，若numBuckets＝10，rolling window＝10000，那么一个bucket的时间即1秒。必须符合rolling window% numberBuckets == 0。默认10
###hystrix.command.default.metrics.rollingStats.numBuckets =5
